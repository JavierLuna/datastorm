version: 2.1

workflows:
  branch_tests:
    jobs:
      - tests:
          name: Run all tests under emulator
      - static-analysis:
          name: Run linting and type hinting checks

  release-workflow:
      jobs:
          - tests:
              filters:
                tags:
                  only: /[0-9]+(\.[0-9]+)*a[0-9]+/
                branches:
                  ignore: /.*/

          - static-analysis:
              filters:
                tags:
                  only: /[0-9]+(\.[0-9]+)*a[0-9]+/
                branches:
                  ignore: /.*/

          - release-on-tag:
              requires:
                - tests
                - static-analysis
              filters:
                tags:
                  only: /[0-9]+(\.[0-9]+)*a[0-9]+/
                branches:
                  ignore: /.*/
jobs:

  tests:
    docker:
        - image: javierluna/datastorm-test-env:255.0.0-3.6.9
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install poetry
            make dependencies
      - run:
          name: Run tests
          command: |
            . env/bin/activate
            make tests

  static-analysis:
      docker:
          - image: circleci/python:3.6
      steps:
          - checkout
          - run:
              name: Install dependencies
              command: |
                python3 -m venv env
                . env/bin/activate
                pip install poetry
                make dependencies
          - run:
              name: Linting
              command: |
                . env/bin/activate
                make lint
          - run:
              name: Type hinting
              command: |
                . env/bin/activate
                make type-check

  release-on-tag:
    docker:
      - image: circleci/python:3.6

    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install poetry
            make dependencies
      - run:
          name: Publishing to PyPi
          command: |
            . env/bin/activate
            make ci-publish
      - add_ssh_keys:
          fingerprints:
            - "45:09:1d:20:95:a8:67:cf:85:26:70:8e:98:10:76:82"
      - run:
          name: Configure git credentials
          command: |
            git config user.email "ci@circleci.com"
            git config user.name "CI bot"
      - run:
          name: Bump version
          command: |
            git checkout -b "release-${CIRCLE_TAG}"
            . env/bin/activate
            make ci-bump-version
            git checkout master
            git merge "release-${CIRCLE_TAG}"
            git push
